[{"name":"class SynchronizedStore<TState>(store: <ERROR CLASS><TState>)","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: <ERROR CLASS><TState>)","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","description":"org.reduxkotlin.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]-synchronized-store/index.html","searchKeys":["SynchronizedStore","class SynchronizedStore<TState>(store: Store<TState>) : SynchronizedObject, Store<TState> ","org.reduxkotlin.SynchronizedStore"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): <ERROR CLASS><State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): <ERROR CLASS><State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","description":"org.reduxkotlin.createSynchronizedStoreEnhancer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]create-synchronized-store-enhancer.html","searchKeys":["createSynchronizedStoreEnhancer","fun <State> createSynchronizedStoreEnhancer(): StoreEnhancer<State>","org.reduxkotlin.createSynchronizedStoreEnhancer"]},{"name":"fun <State> createThreadSafeStore(reducer: <ERROR CLASS><State>, preloadedState: State, enhancer: <ERROR CLASS><State>? = null): <ERROR CLASS><State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: <ERROR CLASS><State>, preloadedState: State, enhancer: <ERROR CLASS><State>? = null): <ERROR CLASS><State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","description":"org.reduxkotlin.createThreadSafeStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]create-thread-safe-store.html","searchKeys":["createThreadSafeStore","fun <State> createThreadSafeStore(reducer: Reducer<State>, preloadedState: State, enhancer: StoreEnhancer<State>? = null): Store<State>","org.reduxkotlin.createThreadSafeStore"]},{"name":"fun <TState> SynchronizedStore(store: <ERROR CLASS><TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: <ERROR CLASS><TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"fun <TState> SynchronizedStore(store: Store<TState>)","description":"org.reduxkotlin.SynchronizedStore.SynchronizedStore","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]-synchronized-store/-synchronized-store.html","searchKeys":["SynchronizedStore","fun <TState> SynchronizedStore(store: Store<TState>)","org.reduxkotlin.SynchronizedStore.SynchronizedStore"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val getState: GetState<TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]-synchronized-store/get-state.html","searchKeys":["getState","open override val getState: GetState<TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val replaceReducer: (Reducer<TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open override val replaceReducer: (Reducer<TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override val subscribe: (StoreSubscriber) -> StoreSubscription","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]-synchronized-store/subscribe.html","searchKeys":["subscribe","open override val subscribe: (StoreSubscriber) -> StoreSubscription","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android-jvm]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[android]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-arm64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-simulator-arm64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[ios-x64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[js]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[jvm]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[linux-x64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[macos-x64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[mingw-x64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-arm64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[tvos-x64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm32]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-arm64]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open override var dispatch: Dispatcher","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[watchos-x86]-synchronized-store/dispatch.html","searchKeys":["dispatch","open override var dispatch: Dispatcher","org.reduxkotlin.SynchronizedStore.dispatch"]},{"name":"open val getState: <ERROR CLASS><TState>","description":"org.reduxkotlin.SynchronizedStore.getState","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]-synchronized-store/get-state.html","searchKeys":["getState","open val getState: <ERROR CLASS><TState>","org.reduxkotlin.SynchronizedStore.getState"]},{"name":"open val replaceReducer: (<ERROR CLASS><TState>) -> Unit","description":"org.reduxkotlin.SynchronizedStore.replaceReducer","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]-synchronized-store/replace-reducer.html","searchKeys":["replaceReducer","open val replaceReducer: (<ERROR CLASS><TState>) -> Unit","org.reduxkotlin.SynchronizedStore.replaceReducer"]},{"name":"open val subscribe: (<ERROR CLASS>) -> <ERROR CLASS>","description":"org.reduxkotlin.SynchronizedStore.subscribe","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]-synchronized-store/subscribe.html","searchKeys":["subscribe","open val subscribe: (<ERROR CLASS>) -> <ERROR CLASS>","org.reduxkotlin.SynchronizedStore.subscribe"]},{"name":"open var dispatch: <ERROR CLASS>","description":"org.reduxkotlin.SynchronizedStore.dispatch","location":"redux-kotlin-threadsafe/org.reduxkotlin/[common]-synchronized-store/dispatch.html","searchKeys":["dispatch","open var dispatch: <ERROR CLASS>","org.reduxkotlin.SynchronizedStore.dispatch"]}]
