apply plugin: 'java'
apply plugin: 'kotlin-multiplatform'

archivesBaseName = 'redux-kotlin'

group 'org.reduxkotlin'
version '0.2'

kotlin {
    jvm()
    js() {
        [compileKotlinJs, compileTestKotlinJs].each { configuration ->
            configuration.kotlinOptions {
                moduleKind = 'umd'
                sourceMap = true
                metaInfo = true
            }
        }
    }

    iosArm64("ios")
    iosX64("iosSim")
    macosX64("macos")
    mingwX64("win")
    wasm32("wasm")
    linuxArm32Hfp("linArm32")
    linuxMips32("linMips32")
    linuxMipsel32("linMipsel32")
    linuxX64("lin64")

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
            }
        }
        commonTest {
            kotlin.srcDir('src/test')
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }

        jvmMain {
            kotlin.srcDir('src/jvmMain/kotlin')
            dependencies {
                implementation kotlin("stdlib")
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation 'junit:junit:4.12'
            }
        }
        jsMain {
            kotlin.srcDir('src/jsMain/kotlin')
            dependencies {
                implementation kotlin("stdlib-js")
            }
            compileKotlinJs {
                kotlinOptions.metaInfo = true
                kotlinOptions.sourceMap = true
                kotlinOptions.suppressWarnings = true
                kotlinOptions.verbose = true
                kotlinOptions.main = "call"
                kotlinOptions.moduleKind = "umd"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin("test-js")
                implementation kotlin("stdlib-js")
            }
        }
        nativeMain {
            kotlin.srcDir('src/nativeMain/kotlin')
        }

        iosSimMain.dependsOn iosMain
        iosSimTest.dependsOn iosTest

        configure([targets.ios, targets.iosSim, targets.macos, targets.win, targets.linArm32, targets.linMips32, targets.linMipsel32, targets.lin64]) {
            compilations.main.source(sourceSets.nativeMain)
        }
    }
}


afterEvaluate {
    // Alias the task names we use elsewhere to the new task names.
    tasks.create('installMP').dependsOn('publishKotlinMultiplatformPublicationToMavenLocal')
    tasks.create('installLocally') {
        dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
        dependsOn 'publishJvmPublicationToTestRepository'
        dependsOn 'publishJsPublicationToTestRepository'
        dependsOn 'publishMetadataPublicationToTestRepository'
    }
    tasks.create('installIosLocally') {
        dependsOn 'publishKotlinMultiplatformPublicationToTestRepository'
        dependsOn 'publishIosArm32PublicationToTestRepository'
        dependsOn 'publishIosArm64PublicationToTestRepository'
        dependsOn 'publishIosX64PublicationToTestRepository'
        dependsOn 'publishMetadataPublicationToTestRepository'
    }
    // NOTE: We do not alias uploadArchives because CI runs it on Linux and we only want to run it on Mac OS.
    //tasks.create('uploadArchives').dependsOn('publishKotlinMultiplatformPublicationToMavenRepository')
}

apply from: rootProject.file('gradle/publish.gradle')

publishing {
    publications.all {
        // Rewrite all artifacts from using the project name to just 'runtime'.
        artifactId = artifactId.replace(project.name, 'redux-kotlin')
    }
}

